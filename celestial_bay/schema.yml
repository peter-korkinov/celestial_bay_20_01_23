openapi: 3.0.3
info:
  title: CelestialBay API
  version: 1.0.0
  description: Portfolio Project
paths:
  /auth/change_password/{id}/:
    put:
      operationId: auth_change_password_update
      description: |-
        For changing the password of an existing user.
        It requires user to be authenticated.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
  /auth/login/:
    post:
      operationId: auth_login_create
      description: |-
        Takes a set of user credentials and returns user info(id, first_name,
        last_name, email), an access and refresh JSON web token pair to prove
        the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainPair'
          description: ''
  /auth/login/refresh/:
    post:
      operationId: auth_login_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/logout/:
    post:
      operationId: auth_logout_create
      description: |-
        For logging out a user.
        It requires user to be authenticated.
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /auth/register/:
    post:
      operationId: auth_register_create
      description: For registering new users.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /auth/update_user/{id}/:
    put:
      operationId: auth_update_user_update
      description: |-
        For updating user info.
        It requires user to be authenticated.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateUser'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUser'
          description: ''
  /auth/users/{id}/:
    get:
      operationId: auth_users_retrieve
      description: |-
        For getting a user's info.

        It inherits from generics.RetrieveAPIView and supports GET queries only for
        single user by user id.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /comments/:
    get:
      operationId: comments_list
      description: |-
        A viewset for the Comment model.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - comments
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCommentList'
          description: ''
    post:
      operationId: comments_create
      description: |-
        A viewset for the Comment model.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      tags:
      - comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /comments/{id}/:
    get:
      operationId: comments_retrieve
      description: |-
        A viewset for the Comment model.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    put:
      operationId: comments_update
      description: |-
        A viewset for the Comment model.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    patch:
      operationId: comments_partial_update
      description: |-
        A viewset for the Comment model.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    delete:
      operationId: comments_destroy
      description: |-
        A viewset for the Comment model.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /constellation_images/{id}/:
    get:
      operationId: constellation_images_retrieve
      description: |-
        A viewset that provides read only functionality for the ConstellationImage model.

        All other actions(create, update, destroy, etc.) are going to be available
        to superusers only through the admin panel.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this constellation image.
        required: true
      tags:
      - constellation_images
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstellationImage'
          description: ''
  /constellations/:
    get:
      operationId: constellations_list
      description: |-
        A viewset that provides read only functionality for the Constellation model.

        All other actions(create, update, destroy, etc.) are going to be available
        to superusers only through the admin panel.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - constellations
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConstellationList'
          description: ''
  /constellations/{id}/:
    get:
      operationId: constellations_retrieve
      description: |-
        A viewset that provides read only functionality for the Constellation model.

        All other actions(create, update, destroy, etc.) are going to be available
        to superusers only through the admin panel.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this constellation.
        required: true
      tags:
      - constellations
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Constellation'
          description: ''
  /galaxies/:
    get:
      operationId: galaxies_list
      description: |-
        A viewset for the Galaxy model.

        Has 'images' as an expandable field.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - galaxies
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGalaxyList'
          description: ''
    post:
      operationId: galaxies_create
      description: |-
        A viewset for the Galaxy model.

        Has 'images' as an expandable field.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      tags:
      - galaxies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Galaxy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Galaxy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Galaxy'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Galaxy'
          description: ''
  /galaxies/{id}/:
    get:
      operationId: galaxies_retrieve
      description: |-
        A viewset for the Galaxy model.

        Has 'images' as an expandable field.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this galaxy.
        required: true
      tags:
      - galaxies
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Galaxy'
          description: ''
    put:
      operationId: galaxies_update
      description: |-
        A viewset for the Galaxy model.

        Has 'images' as an expandable field.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this galaxy.
        required: true
      tags:
      - galaxies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Galaxy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Galaxy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Galaxy'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Galaxy'
          description: ''
    patch:
      operationId: galaxies_partial_update
      description: |-
        A viewset for the Galaxy model.

        Has 'images' as an expandable field.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this galaxy.
        required: true
      tags:
      - galaxies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGalaxy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGalaxy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGalaxy'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Galaxy'
          description: ''
    delete:
      operationId: galaxies_destroy
      description: |-
        A viewset for the Galaxy model.

        Has 'images' as an expandable field.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this galaxy.
        required: true
      tags:
      - galaxies
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /galaxy_images/:
    get:
      operationId: galaxy_images_list
      description: |-
        A viewset for the GalaxyImage model.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - galaxy_images
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGalaxyImageList'
          description: ''
    post:
      operationId: galaxy_images_create
      description: |-
        A viewset for the GalaxyImage model.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      tags:
      - galaxy_images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GalaxyImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GalaxyImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GalaxyImage'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalaxyImage'
          description: ''
  /galaxy_images/{id}/:
    get:
      operationId: galaxy_images_retrieve
      description: |-
        A viewset for the GalaxyImage model.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this galaxy image.
        required: true
      tags:
      - galaxy_images
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalaxyImage'
          description: ''
    put:
      operationId: galaxy_images_update
      description: |-
        A viewset for the GalaxyImage model.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this galaxy image.
        required: true
      tags:
      - galaxy_images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GalaxyImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GalaxyImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GalaxyImage'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalaxyImage'
          description: ''
    patch:
      operationId: galaxy_images_partial_update
      description: |-
        A viewset for the GalaxyImage model.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this galaxy image.
        required: true
      tags:
      - galaxy_images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGalaxyImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGalaxyImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGalaxyImage'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalaxyImage'
          description: ''
    delete:
      operationId: galaxy_images_destroy
      description: |-
        A viewset for the GalaxyImage model.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this galaxy image.
        required: true
      tags:
      - galaxy_images
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /post_images/:
    get:
      operationId: post_images_list
      description: |-
        A viewset for the PostImage model.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - post_images
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPostImageList'
          description: ''
    post:
      operationId: post_images_create
      description: |-
        A viewset for the PostImage model.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      tags:
      - post_images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostImage'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostImage'
          description: ''
  /post_images/{id}/:
    get:
      operationId: post_images_retrieve
      description: |-
        A viewset for the PostImage model.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post image.
        required: true
      tags:
      - post_images
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostImage'
          description: ''
    put:
      operationId: post_images_update
      description: |-
        A viewset for the PostImage model.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post image.
        required: true
      tags:
      - post_images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostImage'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostImage'
          description: ''
    patch:
      operationId: post_images_partial_update
      description: |-
        A viewset for the PostImage model.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post image.
        required: true
      tags:
      - post_images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPostImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPostImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPostImage'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostImage'
          description: ''
    delete:
      operationId: post_images_destroy
      description: |-
        A viewset for the PostImage model.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post image.
        required: true
      tags:
      - post_images
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /posts/:
    get:
      operationId: posts_list
      description: |-
        A viewset for the Post model.

        Has 'images' and 'comments' as expandable fields.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - posts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPostList'
          description: ''
    post:
      operationId: posts_create
      description: |-
        A viewset for the Post model.

        Has 'images' and 'comments' as expandable fields.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      tags:
      - posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /posts/{id}/:
    get:
      operationId: posts_retrieve
      description: |-
        A viewset for the Post model.

        Has 'images' and 'comments' as expandable fields.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    put:
      operationId: posts_update
      description: |-
        A viewset for the Post model.

        Has 'images' and 'comments' as expandable fields.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    patch:
      operationId: posts_partial_update
      description: |-
        A viewset for the Post model.

        Has 'images' and 'comments' as expandable fields.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPost'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    delete:
      operationId: posts_destroy
      description: |-
        A viewset for the Post model.

        Has 'images' and 'comments' as expandable fields.

        It provides full functionality for the authenticated owner of the object,
        and read-only options for all other users - authenticated or not.


        Extends FlexFieldModelViewSet and is able to dynamically set fields.

        Select a subset of fields by either:
        specifying which ones should be included

            e.g.  https://api.example.org/galaxies/?fields=pk,name

        specifying which ones should be excluded

            e.g.  https://api.example.org/galaxies/?omit=pk,name

        Easily set up fields that be expanded to their fully serialized counterparts
        via query parameters (users/?expand=organization,friends)

            e.g.  https://api.example.org/galaxies/?expand=images

        Use dot notation to dynamically modify fields at arbitrary depths

            e.g. https://api.example.org/constellations/?expand=galaxies.images


        Uses CustomLimitOffsetPagination with default page size of 10 and maximum
        of 50.

        This pagination style mirrors the syntax used when looking up multiple
        database records. The client includes both a "limit" and an "offset" query
        parameter.

        The limit indicates the maximum number of items to return.

        The offset indicates the starting position of the query in relation to the
        complete set of unpaginated items.

            e.g.  https://api.example.org/galaxies/?limit=40&offset=400
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    ChangePassword:
      type: object
      description: |-
        For changing the password of an existing user.

        old_password, password, password2 are required fields.
      properties:
        old_password:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - old_password
      - password
      - password2
    Comment:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        content:
          type: string
        created:
          type: string
          format: date
          readOnly: true
        updated:
          type: string
          format: date
          readOnly: true
        post:
          type: integer
        author:
          type: string
          format: uuid
          nullable: true
      required:
      - content
      - created
      - pk
      - post
      - updated
    Constellation:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 32
        abbreviation:
          type: string
          maxLength: 3
        area_in_sq_deg:
          type: number
          format: double
      required:
      - abbreviation
      - area_in_sq_deg
      - name
      - pk
    ConstellationImage:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        constellation:
          type: integer
        image:
          type: string
          format: uri
      required:
      - constellation
      - image
      - pk
    CustomTokenObtainPair:
      type: object
      description: |-
        Extends the SimpleJWT's TokenObtainPairSerializer by adding user info(id,
        first_name, last_name, email), beside the access and refresh tokens, to  the
        response.
      properties:
        email:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    Galaxy:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 64
        name_origin:
          type: string
        notes:
          type: string
        galaxy_type:
          type: string
          maxLength: 32
        distance:
          type: number
          format: double
        apparent_magnitude:
          type: number
          format: double
        size:
          type: number
          format: double
        owner:
          type: string
          format: uuid
        constellation:
          type: integer
      required:
      - constellation
      - distance
      - galaxy_type
      - name
      - name_origin
      - owner
      - pk
    GalaxyImage:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        galaxy:
          type: integer
        image:
          type: string
          format: uri
      required:
      - galaxy
      - image
      - pk
    PaginatedCommentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    PaginatedConstellationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Constellation'
    PaginatedGalaxyImageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/GalaxyImage'
    PaginatedGalaxyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Galaxy'
    PaginatedPostImageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PostImage'
    PaginatedPostList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Post'
    PatchedComment:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        content:
          type: string
        created:
          type: string
          format: date
          readOnly: true
        updated:
          type: string
          format: date
          readOnly: true
        post:
          type: integer
        author:
          type: string
          format: uuid
          nullable: true
    PatchedGalaxy:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 64
        name_origin:
          type: string
        notes:
          type: string
        galaxy_type:
          type: string
          maxLength: 32
        distance:
          type: number
          format: double
        apparent_magnitude:
          type: number
          format: double
        size:
          type: number
          format: double
        owner:
          type: string
          format: uuid
        constellation:
          type: integer
    PatchedGalaxyImage:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        galaxy:
          type: integer
        image:
          type: string
          format: uri
    PatchedPost:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        title:
          type: string
          maxLength: 256
        content:
          type: string
        created:
          type: string
          format: date
          readOnly: true
        updated:
          type: string
          format: date
          readOnly: true
        author:
          type: string
          format: uuid
          nullable: true
    PatchedPostImage:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        post:
          type: integer
        image:
          type: string
          format: uri
    Post:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        title:
          type: string
          maxLength: 256
        content:
          type: string
        created:
          type: string
          format: date
          readOnly: true
        updated:
          type: string
          format: date
          readOnly: true
        author:
          type: string
          format: uuid
          nullable: true
      required:
      - content
      - created
      - pk
      - title
      - updated
    PostImage:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        post:
          type: integer
        image:
          type: string
          format: uri
      required:
      - image
      - pk
      - post
    Register:
      type: object
      description: |-
        For registering of new users using the custom user model.

        email, password, password2, first_name, last_name are required fields.
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - first_name
      - last_name
      - password
      - password2
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    UpdateUser:
      type: object
      description: |-
        For updating the info of a user.

        Fields able to be updated: email, first_name, last_name.
      properties:
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - first_name
      - last_name
    User:
      type: object
      description: |-
        For retrieving the user info.

        It inherits from the DRF-FlexFields' FlexFieldsModelSerializer

        fields: pk, first_name, last_name, date_joined, last_login
        expandable fields: galaxies
      properties:
        pk:
          type: string
          format: uuid
          readOnly: true
          title: Id
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        date_joined:
          type: string
          format: date-time
        last_login:
          type: string
          format: date-time
          nullable: true
      required:
      - pk
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
